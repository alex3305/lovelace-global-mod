(()=>{var d="global-mod",c="0.3.0";var r=class i{#e;#t=[];#s=[];constructor(){new Promise(e=>{let t=()=>{document.querySelector("home-assistant")?.hass!==void 0?e(document.querySelector("home-assistant").hass):setTimeout(t)};t()}).then(e=>{this.#e=e,Promise.all([this.loadConfig(),this.addEventListeners()])})}static get Current(){return window.location.pathname.toLowerCase()}static get EditMode(){return window.location.search.includes("?edit=1")}static get Name(){return d}static get Version(){return c}get darkMode(){return this.#e.themes.darkMode}get theme(){let e=this.#e.themes.themes,t=this.#e.themes.theme;return Object.hasOwn(e,`${t}-${i.Name}`)?(console.warn(`Theme still uses the deprecated ${i.Name}-suffix.`),e[`${t}-${i.Name}`]):e[t]}async addEventListener(e,t,s){e?.addEventListener(t,s,!1)}async addEventListeners(){let e=()=>{document.hidden||this.applyStyles()};Promise.all([this.addEventListener(window,"location-changed",e),this.addEventListener(window,"popstate",e),this.addEventListener(document,"visibilitychange",e),this.addEventListener(document.body,"click",e),this.addEventListener(document.querySelector("hc-main"),"settheme",e),this.addEventListener(document.querySelector("home-assistant"),"settheme",e)])}async applyStyle(e,t=void 0){if(!i.Current.includes(e.path.toLowerCase())||i.EditMode&&e.disabledOnEdit){t?.remove();return}t===void 0&&(t=await this.createStyleElement(e));try{let s=await this.selectTree(`home-assistant$${e.selector}`,1,9);s.contains(t)||(s.append(t),this.#s.push(t))}catch{console.error(`Could not create rule ${e.name} after multiple tries...`)}}async applyStyles(){this.#t.forEach(e=>{this.applyStyle(e,this.#s.find(t=>t.classList?.contains(e.name)))})}async createRule(e,t){let s=t.substring(0,t.lastIndexOf("-"));return{name:s,selector:e[t],path:e[s+"-path"]||"/",style:e[s+"-style"]||"",disabledOnEdit:e[s+"-disable-on-edit"]||!1,darkStyle:e[s+"-style-dark"],lightStyle:e[s+"-style-light"]}}async createStyleElement(e){let t=document.createElement("style");return t.classList?.add(i.Name),t.classList?.add(e.name),t.setAttribute("style","display:none;"),(async()=>!e.darkStyle&&!e.lightStyle?t.textContent=e.style:t.textContent=e.style+" "+(this.darkMode?e.darkStyle:e.lightStyle))(),t}async loadConfig(){let e=this.theme;this.#t=await Promise.all(Object.keys(e).filter(t=>t.includes("-selector")).map(t=>this.createRule(e,t)).map(t=>((async()=>this.applyStyle(await t))(),t))),!this.#t||this.#t.size==0?console.info("%c Global mod %c loaded without any config...","color:white;background:purple;","","color:black;background:lightblue;",""):console.info(`%c Global Mod %c ${i.Version} `,"color:white;background:purple;","color:white;background:darkgreen;")}async selectTree(e,t,s){let o=e.split("$"),a;try{for(let n=0;n<o.length;n++)o[n]&&(a=a?a.querySelector(o[n]):document.querySelector(o[n]),n+1<o.length&&(a=a.shadowRoot));if(!a)throw new Error;return a}catch{if(console.warn(`Retry for ${e}`),t===s)throw new Error(`No Element Found for ${e}`);return await new Promise(n=>setTimeout(n,t*10)),await this.selectTree(e,t+1,s)}}};new r;})();
